$(document).ready(function() {
  var o,
    a,
    r,
    i,
    c = void 0 === c ? [] : c,
    n = {
      Android: function() {
        return navigator.userAgent.match(/Android/i);
      },
      BlackBerry: function() {
        return navigator.userAgent.match(/BlackBerry/i);
      },
      iOS: function() {
        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
      },
      Opera: function() {
        return navigator.userAgent.match(/Opera Mini/i);
      },
      Windows: function() {
        return navigator.userAgent.match(/IEMobile/i);
      },
      any: function() {
        return (
          n.Android() || n.BlackBerry() || n.iOS() || n.Opera() || n.Windows()
        );
      }
    },
    d = (n.any(), !!n.any()),
    s = location.href.includes("/ar/")
      ? "https://" +
        location.hostname +
        "/suggest/airports?expectedNumberOfRecords=10&outputLanguages=ARABIC&inputText="
      : "https://" + location.hostname + "/places/airports/search?string=",
    l = $("#departure_city_code").text(),
    u = $("#arrival_city_code").text(),
    f = ($("#carrier_code").text(), "");
  switch (
    (1 !=
      ["www.cleartrip.sa", "www.cleartrip.ae"].includes(location.hostname) ||
      location.href.includes("/ar/") ||
      (f = "&skip-lp-redirect=true"),
    typeof country_code)
  ) {
    case "undefined":
      section = "IN";
      break;
    case "object":
      section = $(country_code).text();
      break;
    case "string":
      section = "in" == country_code.toLowerCase() ? "IN" : "AE";
  }
  if (("www.cleartrip.sa" == location.hostname && (section = "SA"), d)) {
    var e = n.any() ? 1 : 2,
      t = n.any() ? 1 : 2;
    function p(e) {
      return e < 10 ? "0" + e : e;
    }
    function m() {
      !section ||
        ("SA" != section && "IN" != section) ||
        "undefined" == typeof section_type ||
        "domestic" != section_type ||
        "undefined" == typeof dep_city_code ||
        "undefined" == typeof arr_city_code ||
        setTimeout(function() {
          $(".ui-datepicker-calendar td").filter(function() {
            if (!$(this).hasClass("ui-state-disabled")) {
              var e = p($(this).text()),
                t = $(this).attr("data-month"),
                n = ((t = p((parseInt(t) + 1).toString())),
                $(this).attr("data-year"));
              (date = n + "" + t + e),
                (min_price = ""),
                0 < c.length &&
                  $.each(c, function(e, t) {
                    t.date == date &&
                      ((price = parseInt(t.min_price)),
                      (price = price.toString()),
                      (min_price = price.replace(
                        /(\d)(?=(\d\d)+\d$)/g,
                        "$1,"
                      )));
                  }),
                min_price &&
                  $(this).append(
                    "<span class='calendarPrice low'>" + min_price + "</small>"
                  );
            }
          });
        }, 50);
    }

    $("#dpt_date_mob").datepicker({
      showButtonPanel: !0,
      closeText: "X",
      minDate: 0,
      dateFormat: "dd/mm/yy",
      numberOfMonths: e,
      stepMonths: t,
      dayNamesMin: ["S", "M", "T", "W", "T", "F", "S"],
      beforeShow: m,
      onChangeMonthYear: m,
      onSelect: function(e) {
        var t = $("#dpt_date_mob").datepicker("getDate");
        t.setDate(t.getDate() + 1),
          $("#m-search-widget")
            .find("li.active a")
            .hasClass("rnd_trip") &&
            ($("#rtn_date_mob").datepicker("setDate", t),
            $("#rtn_date_mob").datepicker("option", "minDate", t),
            setTimeout(function() {
              $("#rtn_date_mob")
                .val(new Date(t).format("dd/mm/yyyy"))
                .datepicker("hide");
            }, 300));
      }
    }),
      $("#rtn_date_mob").datepicker({
        showButtonPanel: !0,
        closeText: "X",
        numberOfMonths: e,
        dateFormat: "dd/mm/yy",
        stepMonths: t,
        beforeShow: m,
        onChangeMonthYear: m,
        dayNamesMin: ["S", "M", "T", "W", "T", "F", "S"],
        onSelect: function() {
          "" != $("#destination_autocomplete").val() &&
            $("#origin_autocomplete").val();
        },
        onClose: function() {
          var e = $("#dpt_date_mob").datepicker("getDate");
          if ($("#rtn_date_mob").datepicker("getDate") <= e) {
            var t = $("#rtn_date_mob").datepicker("option", "minDate");
            $("#rtn_date_mob").datepicker("setDate", t);
          }
        }
      }),
      d &&
        (!section ||
        ("SA" != section && "IN" != section) ||
        "undefined" == typeof section_type ||
        "international" == section_type ||
        "undefined" == typeof dep_city_code ||
        "undefined" == typeof arr_city_code
          ? setTimeout(function() {
              $("#dpt_date_mob")
                .datepicker(
                  "setDate",
                  new Date(Date.now() + 1728e5).format("dd/mm/yyyy")
                )
                .datepicker("hide");
            }, 700)
          : ((url =
              "https://www.cleartrip.com/seoapi/flight_api/fare_calendar?from=" +
              dep_city_code +
              "&to=" +
              arr_city_code +
              "&section=" +
              section),
            $.ajax(
              {
                url: url,
                method: "GET",
                dataType: "json",
                success: function(e) {
                  var t,
                    n,
                    o = new Date();
                  (month = o.getMonth() + 1),
                    (year = o.getFullYear()),
                    (lastdate = ((t = year),
                    (n = month),
                    new Date(t, n + 1, 0))),
                    (c = []),
                    $.each(e, function(e, t) {
                      parseInt(t.date) <=
                        parseInt(lastdate.format("yyyymmdd")) && c.push(t);
                    });
                },
                complete: function() {
                  $("#dpt_date_mob")
                    .datepicker(
                      "setDate",
                      new Date(Date.now() + 1728e5).format("dd/mm/yyyy")
                    )
                    .datepicker("show");
                }
              },
              200
            )));
  }
  $(".increment").on("click", function(e) {
    $(".desktop_travellers").click(function(e) {
      e.stopPropagation();
    });
    var t = $(this),
      n = parseInt(
        $(this)
          .closest("ul")
          .find(".adult-count")
          .text()
      ),
      o = parseInt(
        $(this)
          .closest("ul")
          .find(".child-count")
          .text()
      ),
      a = parseInt(
        $(this)
          .closest("ul")
          .find(".infant-count")
          .text()
      ),
      r = n + o,
      i = "";
    if (
      (t.hasClass("infant-increment")
        ? ((i = ""),
          (i = parseInt(
            t
              .closest("li")
              .find(".count")
              .text()
          )) < n && (i++, $(".infant-count").text(i)),
          $(".infant-decrement").css({
            color: "#848484",
            background: "#fff",
            border: "2px solid #848484",
            cursor: "pointer"
          }))
        : 0 <= r &&
          r < 9 &&
          (t.hasClass("adult-increment")
            ? ((i = ""),
              (i = parseInt(
                t
                  .closest("li")
                  .find(".count")
                  .text()
              )),
              i++,
              $(".adult-count").text(i),
              $(".adult-decrement").css({
                color: "#848484",
                background: "#fff",
                border: "2px solid #848484",
                cursor: "pointer"
              }),
              r < 9 &&
                $(".infant-increment").css({
                  color: "#848484",
                  background: "#fff",
                  border: "2px solid #848484",
                  cursor: "pointer"
                }))
            : t.hasClass("child-increment") &&
              ((i = ""),
              (i = parseInt(
                t
                  .closest("li")
                  .find(".count")
                  .text()
              )),
              i++,
              $(".child-count").text(i),
              $(".child-decrement").css({
                color: "#848484",
                background: "#fff",
                border: "2px solid #848484",
                cursor: "pointer"
              }))),
      (n = parseInt(
        $(this)
          .closest("ul")
          .find(".adult-count")
          .text()
      )),
      (o = parseInt(
        $(this)
          .closest("ul")
          .find(".child-count")
          .text()
      )),
      (a = parseInt(
        $(this)
          .closest("ul")
          .find(".infant-count")
          .text()
      )),
      $("form")
        .find('input[name="adults"]')
        .val(n),
      $("form")
        .find('input[name="childs"]')
        .val(o),
      $("form")
        .find('input[name="infants"]')
        .val(a),
      (r = n + o) < 2)
    )
      var c = n + o + a + " Traveller";
    else c = n + o + a + " Travellers";
    $(".traveller-menu")
      .prev("input")
      .val(c),
      n == a &&
        ($(".infant-increment").css({
          color: "#d8d8d8",
          background: "#fff",
          border: "2px solid #d8d8d8",
          cursor: "not-allowed"
        }),
        $(".adult-decrement").css({
          color: "#d8d8d8",
          background: "#fff",
          border: "2px solid #d8d8d8",
          cursor: "not-allowed"
        })),
      a < n &&
        1 != n &&
        $(".adult-decrement").css({ background: "#ec4023", cursor: "pointer" }),
      9 <= r &&
        ($(".adult-increment").css({
          color: "#d8d8d8",
          background: "#fff",
          border: "2px solid #d8d8d8",
          cursor: "not-allowed"
        }),
        $(".child-increment").css({
          color: "#d8d8d8",
          background: "#fff",
          border: "2px solid #d8d8d8",
          cursor: "not-allowed"
        }));
  }),
    $(".decrement").on("click", function(e) {
      $(".desktop_travellers").click(function(e) {
        e.stopPropagation();
      });
      var t = $(this),
        n = parseInt(
          $(this)
            .closest("ul")
            .find(".adult-count")
            .text()
        ),
        o = parseInt(
          $(this)
            .closest("ul")
            .find(".child-count")
            .text()
        ),
        a = parseInt(
          $(this)
            .closest("ul")
            .find(".infant-count")
            .text()
        ),
        r = n + o,
        i = "";
      if (
        (t.hasClass("infant-decrement")
          ? ((i = ""),
            (i = parseInt(
              t
                .closest("li")
                .find(".count")
                .text()
            )),
            0 <= --i && $(".infant-count").text(i),
            0 == i &&
              t.css({
                color: "#d8d8d8",
                background: "#fff",
                border: "2px solid #d8d8d8",
                cursor: "not-allowed"
              }),
            $(".infant-increment").css({
              color: "#848484",
              background: "#fff",
              border: "2px solid #848484",
              cursor: "pointer"
            }))
          : 0 < r &&
            r <= 9 &&
            (t.hasClass("adult-decrement")
              ? ((i = ""),
                1 <
                  (i = parseInt(
                    t
                      .closest("li")
                      .find(".count")
                      .text()
                  )) &&
                  a < i &&
                  (i--, $(".adult-count").text(i)),
                1 == i &&
                  t.css({
                    color: "#d8d8d8",
                    background: "#fff",
                    border: "2px solid #d8d8d8",
                    cursor: "pointer"
                  }),
                9 != r &&
                  $(".adult-increment").css({
                    color: "#848484",
                    background: "#fff",
                    border: "2px solid #848484",
                    cursor: "pointer"
                  }))
              : t.hasClass("child-decrement") &&
                ((i = ""),
                (i = parseInt(
                  t
                    .closest("li")
                    .find(".count")
                    .text()
                )),
                0 <= --i && $(".child-count").text(i),
                0 == i &&
                  t.css({
                    color: "#d8d8d8",
                    background: "#fff",
                    border: "2px solid #d8d8d8",
                    cursor: "not-allowed"
                  }),
                9 != r &&
                  $(".child-increment").css({
                    color: "#848484",
                    background: "#fff",
                    border: "2px solid #848484",
                    cursor: "pointer"
                  }))),
        (n = parseInt(
          $(this)
            .closest("ul")
            .find(".adult-count")
            .text()
        )),
        (o = parseInt(
          $(this)
            .closest("ul")
            .find(".child-count")
            .text()
        )),
        (a = parseInt(
          $(this)
            .closest("ul")
            .find(".infant-count")
            .text()
        )),
        $("input[name=adults]").val(n),
        $("input[name=childs]").val(o),
        $("input[name=infants]").val(a),
        (r = n + o) < 2)
      )
        var c = n + o + a + " Traveller";
      else c = n + o + a + " Travellers";
      $(this)
        .closest(".traveller-menu")
        .prev("input")
        .val(c),
        1 == r &&
          ($(".adult-decrement").css({
            color: "#d8d8d8",
            background: "#fff",
            border: "2px solid #d8d8d8",
            cursor: "not-allowed"
          }),
          $(".child-decrement").css({
            color: "#d8d8d8",
            background: "#fff",
            border: "2px solid #d8d8d8",
            cursor: "not-allowed"
          })),
        r < 9 &&
          $(".increment").css({
            color: "#848484",
            background: "#fff",
            border: "2px solid #848484",
            cursor: "pointer"
          }),
        n == a &&
          ($(".adult-decrement").css({
            color: "#d8d8d8",
            background: "#fff",
            border: "2px solid #d8d8d8",
            cursor: "not-allowed"
          }),
          $(".infant-increment").css({
            color: "#d8d8d8",
            background: "#fff",
            border: "2px solid #d8d8d8",
            cursor: "not-allowed"
          })),
        a < n &&
          1 != n &&
          $(".adult-decrement").css({
            background: "#ec4023",
            cursor: "pointer"
          });
    }),
    $("#origin_autocomplete_mob,#destination_autocomplete_mob").autocomplete({
      source: function(e, t) {
        $.getJSON(s + e.term + f, function(e) {
          var n = [];
          (e = x(e)),
            $.each(e, function(e, t) {
              n.push({ label: t.v, value: t.v });
            }),
            t(n);
        });
      },
      select: function(e, t) {
        var n = (function(e) {
          if (e) return e.match(/.*\(([A-Z]*)\)$/)[1];
        })(t.item.value);
        "origin_autocomplete_mob" == e.target.id
          ? ((o = g(t.item.value)), (i = w(t.item.value)), $(".from").val(n))
          : ((a = g(t.item.value)), (r = w(t.item.value)), $(".to").val(n));
      },
      minLength: 3
    }),
    d &&
      (null != l &&
        null != l &&
        "" != l &&
        $.ajax({ type: "GET", dataType: "json", url: s + l + f }).done(function(
          t
        ) {
          null != t[0] &&
            ((t = x(t)),
            $(".from").val(l),
            $.each(t, function(e) {
              l == t[e].k &&
                ((i = w(t[e].v)),
                (o = g(t[e].v)),
                $("#origin_autocomplete_mob").val(t[e].v));
            }));
        }),
      null != u &&
        null != u &&
        "" != u &&
        $.ajax({ type: "GET", dataType: "json", url: s + u + f }).done(function(
          t
        ) {
          null != t[0] &&
            ((t = x(t)),
            $(".to").val(u),
            $.each(t, function(e) {
              u == t[e].k &&
                ((r = w(t[e].v)),
                (a = g(t[e].v)),
                $("#destination_autocomplete_mob").val(t[e].v));
            }));
        }));
  var h = ["www.cleartrip.sa", "www.cleartrip.ae"];
  if (void 0 !== window.languageType) var _ = window.languageType;
  if (void 0 !== window.language_type) _ = window.language_type;
  var v = Date.now() + 1728e5,
    y = Date.now() + 3456e5;
  function b(e) {
    $(".mob_errors_container .error-msg").text(e),
      $(".mob_errors_container").fadeIn(),
      $("html, body").animate({ scrollTop: 0 }, "slow"),
      setTimeout(function() {
        $(".mob_errors_container").fadeOut(500);
      }, 1500);
  }
  function g(e) {
    if (e) return e.match(/.+, ([A-Z]{2}) - .+/)[1];
  }
  function w(e) {
    if (e) return (city_name = e.replace(/\s*\(.*?\)\s*/g, "")), city_name;
  }
  function x(e) {
    return (e = location.href.includes("/ar/")
      ? e.map(function(e) {
          return (e = { k: e.code, v: e.arabic[0] });
        })
      : e.map(function(e) {
          return (e = { k: e.k, v: e.v });
        }));
  }
  $("#dpt_date_mob").val(new Date(v).format("dd/mm/yyyy")),
    $("#rtn_date_mob").val(new Date(y).format("dd/mm/yyyy")),
    $("#button_flight_search_mob").on("click", function(e) {
      if (
        d &&
        $("#m-search-widget")
          .find("li.active a")
          .hasClass("one_way")
      ) {
        e.preventDefault();
        (ret_val = $("#rtn_date_mob").val()), $("#rtn_date_mob").val("");
      }
      if (!$("#origin_autocomplete_mob").val())
        return b("Please enter departure city name"), !1;
      if (!$("#destination_autocomplete_mob").val())
        return b("Please enter arrival city name"), !1;
      this.form.target = "_self";
      var t =
        o.toLowerCase() != country_code || a.toLowerCase() != country_code
          ? "international/"
          : "";
      if (n.any()) {
        if (
          ((domains = ["www.cleartrip.com"]),
          location.hostname != 0 <= domains.indexOf(location.hostname))
        )
          if ("in" == o.toLowerCase() && "in" == a.toLowerCase()) t = "";
          else t = "international/";
        else t = "international/";
        if (void 0 === t) t = "international/";
        $(this)
          .closest("form")
          .append("<input type='hidden' name='mobile' value='true'>"),
          "ar" == _ && 0 <= $.inArray(location.hostname, h)
            ? (this.form.action = "/ar/m/flights/" + t + "results")
            : (this.form.action = "/m/flights/" + t + "results");
      } else "ar" == _ && 0 <= $.inArray(location.hostname, h) ? (this.form.action = "/ar/flights/" + t + "results") : (this.form.action = "/flights/" + t + "results");
      $(this)
        .closest("form")
        .append("<input type='hidden' name='page' value='loaded' />"),
        $(this)
          .closest("form")
          .append(
            '<input type="hidden" name="from_header" id="from_header" value="' +
              i +
              '"/>'
          ),
        $(this)
          .closest("form")
          .append(
            '<input type="hidden" name="to_header" id="to_header" value="' +
              r +
              '"/>'
          ),
        "undefined" == typeof country_code ||
          ("IN" != country_code &&
            "in" != country_code &&
            "SA" != country_code &&
            "sa" != country_code) ||
          ($(this)
            .closest("form")
            .append(
              "<input type='hidden' name='utm_campaign' id='utm_campaign' value=seo_" +
                page_type +
                "_page_search_button/>"
            ),
          $(this)
            .closest("form")
            .append(
              "<input type='hidden' name='utm_source' id='utm_source' value='google'/>"
            ),
          $(this)
            .closest("form")
            .append(
              "<input type='hidden' name='utm_medium' id='utm_medium' value='organic'/>"
            )),
        this.form.submit();
    }),
    $(".click-block").on("click", function(e) {
      var t = parseInt(
        $(this)
          .closest("ul")
          .find(".adult-count")
          .text()
      );
      $(".adultsNumber").text(t);
      var n = parseInt(
        $(this)
          .closest("ul")
          .find(".child-count")
          .text()
      );
      $(".childNumber").text(n);
      var o = parseInt(
        $(this)
          .closest("ul")
          .find(".infant-count")
          .text()
      );
      $(".infantsNumber").text(o);
    }),
   $("#m-search-widget a.rnd_trip").parent("li").addClass("active");
    $("a.toggle_trip").on("click", function() {
      if (this.className.includes("rnd_trip")) {
        $("a.one_way")
          .parent("li")
          .removeClass("active"),
          $(".rdate").show(),
          $("a.rnd_trip")
            .parent("li")
            .addClass("active");
        var e = $("#dpt_date_mob").datepicker("getDate");
        $("#one_way_mob").val("R"),
          e &&
            (e.setDate(e.getDate() + 1),
            $("#rtn_date_mob").datepicker("setDate", e),
            $("#rtn_date_mob").datepicker("option", "minDate", e));
      } else
        $("#one_way_mob").val("O"),
          $(".rdate").hide(),
          $("a.one_way")
            .parent("li")
            .addClass("active"),
          $("a.rnd_trip")
            .parent("li")
            .removeClass("active");
    }),
    d &&
      ($("#m-search-widget li a.rnd_trip").trigger("click"),
      $("#AirSearchMob")
        .find('input[name="adults"]')
        .val("1"),
      $("#travellerModal span.adult-count").text("1"));
});
